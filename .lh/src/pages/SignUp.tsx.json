{
    "sourceFile": "src/pages/SignUp.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1740724709775,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740724723725,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,9 @@\n import { useState } from \"react\";\r\n import { useNavigate } from \"react-router-dom\";\r\n \r\n+import bcrypt from \"bcryptjs\";\r\n+\r\n export const Signup = () => {\r\n   const navigate = useNavigate();\r\n   const [email, setEmail] = useState<string>(\"\");\r\n   const [password, setPassword] = useState<string>(\"\");\r\n"
                }
            ],
            "date": 1740724709774,
            "name": "Commit-0",
            "content": "import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport const Signup = () => {\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n  const [error, setError] = useState<string>(\"\");\r\n\r\n  const handleSignup = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (!email || !password) {\r\n      setError(\"Email and password are required.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Hash the password\r\n      const hashedPassword = await bcrypt.hash(password, 10);\r\n\r\n      // Store user data in local storage\r\n      const userData = { email, password: hashedPassword };\r\n      localStorage.setItem(\"user\", JSON.stringify(userData));\r\n\r\n      // Simulate token generation\r\n      localStorage.setItem(\"token\", hashedPassword);\r\n\r\n      // Navigate to the home page or another page\r\n      navigate(\"/login\");\r\n    } catch (error) {\r\n      setError(\"An error occurred during signup. Please try again.\");\r\n      return error;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-center min-h-screen bg-black\">\r\n      <div className=\"w-96 p-6 bg-black text-white text-center\">\r\n        <div className=\"flex justify-center mb-6\">\r\n          <img\r\n            src=\"https://upload.wikimedia.org/wikipedia/commons/2/26/Spotify_logo_with_text.svg\"\r\n            alt=\"Spotify Logo\"\r\n            className=\"h-10\"\r\n          />\r\n        </div>\r\n        <h2 className=\"text-2xl font-bold\">Sign up to start listening</h2>\r\n        <form className=\"mt-6 text-left\" onSubmit={handleSignup}>\r\n          <label className=\"block text-sm font-semibold mb-2\">\r\n            Email address\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"name@domain.com\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            className=\"w-full p-2 bg-gray-800 text-white rounded border border-gray-600 focus:outline-none focus:border-green-500\"\r\n          />\r\n          <label className=\"block text-sm font-semibold mb-2 mt-4\">\r\n            Password\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            className=\"w-full p-2 bg-gray-800 text-white rounded border border-gray-600 focus:outline-none focus:border-green-500\"\r\n          />\r\n          {error && <p className=\"text-red-500 text-sm mt-2\">{error}</p>}\r\n          <button\r\n            type=\"submit\"\r\n            className=\"w-full mt-4 bg-green-500 text-black py-2 rounded font-bold hover:bg-green-400\"\r\n          >\r\n            Next\r\n          </button>\r\n        </form>\r\n        <div className=\"flex items-center my-4\">\r\n          <div className=\"flex-1 h-px bg-gray-700\"></div>\r\n          <p className=\"px-2 text-gray-400\">or</p>\r\n          <div className=\"flex-1 h-px bg-gray-700\"></div>\r\n        </div>\r\n        <button className=\"w-full flex items-center justify-center gap-2 bg-gray-800 text-white py-2 rounded mb-2 border border-gray-600 hover:bg-gray-700\">\r\n          <img\r\n            src=\"https://img.icons8.com/color/48/000000/google-logo.png\"\r\n            alt=\"Google\"\r\n            className=\"h-5\"\r\n          />\r\n          Sign up with Google\r\n        </button>\r\n        <button className=\"w-full flex items-center justify-center gap-2 bg-gray-800 text-white py-2 rounded mb-2 border border-gray-600 hover:bg-gray-700\">\r\n          <img\r\n            src=\"https://img.icons8.com/fluency/48/000000/facebook-new.png\"\r\n            alt=\"Facebook\"\r\n            className=\"h-5\"\r\n          />\r\n          Sign up with Facebook\r\n        </button>\r\n        <button className=\"w-full flex items-center justify-center gap-2 bg-gray-800 text-white py-2 rounded border border-gray-600 hover:bg-gray-700\">\r\n          <img\r\n            src=\"https://img.icons8.com/ios-filled/50/ffffff/mac-os.png\"\r\n            alt=\"Apple\"\r\n            className=\"h-5\"\r\n          />\r\n          Sign up with Apple\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"
        }
    ]
}